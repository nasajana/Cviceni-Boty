/* nejsme vcerejsi, pouzivame moderni a intuitivni box model */
html { box-sizing: border-box; }
*, ::after, ::before { box-sizing: inherit; }

body {
    text-rendering: optimizeLegibility;
}

/*
 BARVY
 svetle sede pozadi      #f5f5f5
 tmavsi seda             #959595
 barevny prechod nahore  #06d7c1
 barevny prechod dole    #50cc49
 zelena cara             #06d7c1
 oranzova                #f15f42

 PISMO
 Rubik - pouzite rezy pisma regular 400 a medium 500
 https://fonts.google.com/specimen/Rubik
*/

/* ----- zde zacni psat vlastni css ----- */
.body{
    background-color: #f5f5f5;
    
}
.zbozi{
    font-family: 'Rubik', sans-serif;
    font-size: 14px;
    display: flex;
    width: 670px ;
    height: 440px;
    margin: auto;
    border-radius: 8px;
    background-color: white;
    box-shadow: 5px 5px 15px rgb(205, 205, 205);

}
.vizual{
    background: linear-gradient(#06d7c1,#50cc49);
    /*color highlight v extension - doplněk ke stažení ukáže obdélníček s náhledem barvy na jejím názvu*/
    width: 50%;
    /* zde viz komentář ohledně flex basis*/
    position: relative;
    border-top-left-radius: 8px;
    border-bottom-left-radius: 8px;
    /*anebo border-radius: 8px 0 0 8px*/;
    color: white;
   

}
.detaily{

    width: 50%;
    flex-direction: column;
    position: relative;
}

.nazev,
.produkt,
.popis,
.parametr{
    flex-grow: 1;
}

.nazev,
.parametr,
.tlacitko{
    text-transform: uppercase;
}

.vizual,
.detaily{
    padding: 30px;
}
.nazev{  
    font-size: 20px;
    margin: 0;
}

.produkt{
    color:#959595 ;
    font-weight: 500;
}

.popis{
    padding: 30px 0px;
    border-bottom: 2px solid #06d7c1;

}
.parametr{
    font-size: inherit;
    padding-top: 20px;
}

.slogan{
    font-size: 16px;
    font-weight: 500;
}

.bota{
    position: absolute;
    left: -80px;
    top: 140px;
    /* jiný způsob je použít záporný margin
    margin left: mínus něco a doladím v náhledu... cca -120px
    margin bottom: -56 zde zarovnávám k textu, který tam pod botou mám

    pro zarovnání té boty dolů použít flex box, dá to prvky vedle sebe, pak flex-direction column, vrátí to pod sebe, no a pak dát flex-grow: 1 a ono to samo odtlačí obrázek dolů a pružně reaguje volným místem nahoře
    
    */
}

.cena{
    font-size: 28px;
    
}
.cenovka{
    position: absolute;
    right: 30px;
    bottom: 30px;
    text-align: right;
}

.zaruka{
    font-size: 12px;
}


.velikosti{
    display: flex;
    width: 100%;
    list-style-type: none;
    /*justify-content: space-around;*/
    gap: 10px 20px;

    /* první číslo po řádcích, druhé na výšku, stačí uvést jedno a to bude v řádku vedle sebe*/

    flex-wrap: wrap;

    /* ten wrap je proto, aby mi neutíkaly v řádku ostatní velikosti, když jich bude víc*/


    align-items: center;
 /*toto zarovná čísla, ale je jiná možnost, udělat ty číslíčka jako odkazy

 všude k li v seznamu dodám navíc parametr a jako odkaz, dodám v css styl .velikosti li { zde vše co je pro velikosti dosud a orámování dám všem, ale transparent. Kdyby nebyl border u všech, tak by mi to poskakovalo. Barevný border dám pouze u hover a u fokusu

    musím se zbavit modré barvy u odkazů - inherit, odstranit podtržení text-decoration: none; 

    také dáme outline:none právě proto, aby mi prohlížeč netlačit orámování fokusu, který má vestavěný
    
    */
    padding: 0px;
    /* těch původních 40px pro výchozí odsazení ul seznamu můžu odstranit takto, 
    padding-inline-start: mi třeba říká, že mezera u odrážek bude tam, kde lidi čtou zleva doprava, ale třeba arabština to tak nemá, proto už se nepoužívá left a right padding */
        
    /*
    display flex se mi seředí vedle sebe místo pod sebe

    u toho odsazení můžu dát položky i do margin, ale toto není praktické, zase tedy použiju flex
    space-between není vhodná, kdyby byly pouze 2-3 velikosti, tak se to strašně roztáhne

    existuje vlastnost GAP, už je víc podporována (kontrola v can-i-use!!)

    GAP mi říká, jak velké rozestupy v px mají být mezi prvky

    */
    flex-grow: 1;
    align-content: flex-start;
    /* toto vyřeší problém s řazením více velikostí do více řádků při změnách velikosti
    kupodivu mně to nedělá to, co jemu :)

    align-items řeší pouze co se děje v jednom řádku, content to, co je ve více řádcích a jak jsou od sebe
    */
}

.vybrana{
    color: red;
    border: 1px solid;
    /* zde nedám tu barvu, dám ji samostatně do color, kdyby zákazník měnil barvy, tak bude na jeden zátah změněná v color
    */
    border-radius: 50%;
    padding: 3px;
}
.tlacitko{
    color: white ;
    text-decoration: none;
    background-color: #f15f42;      
    
    display: inline-block;
    /*tímto prvek nebude přetékat nahoře a vlevo, chci ho tvatovat a odsune se mi od ostatního obsahu*/

    
    /*padding: 1.2vw; 
    zde také lepší pohrát si s flexem, toto mé řešení není ideální, hýbe se
    */
    width: 130px;
    height: 40px;
    border-radius: 5px;
    position: absolute;


/* zde je také dobré použít flex na odstavec detaily, při jiné délce textu to nedělá problém


*/

    left: 30px;
    bottom: 30px;
    text-align: center;
}
.tlacitko:hover,
.tlacitko:focus{
    /*dodat mu barvu ppzadí-písma*/
}




/* jako první je dobré řešit fonty
pak pokračovat podle toho co nás baví, třeba začít dlaždicí, 

v HTML kouknu co je do čeho zabalené

je dobré používat pouze omezení shora místo pevné velikosti-- kvůli responzivitě

zarámování a pozadí dlaždice
rámec - jak vystředit
a/ margin:auto - ponecháme co je kratší, jinak je to prý jedno
b/ display:flex a pak justify-content: center

display flex dá prvky vedle sebe - tím kartičku polovinama místo pod sebe dám vedle sebe

flex-basis: 50% bude říkat, že prvky mají být polovinou, když ale nemůže toto dodržet, tak tlačí na druhou stranu, to se dá řešit zvlášť

*/